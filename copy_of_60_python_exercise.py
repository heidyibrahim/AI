# -*- coding: utf-8 -*-
"""Copy of 60 python exercise.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vzDV7HGPrYSDWtJAXBYeJXPlZzxLGqyj

**1-Write a Python program to calculate the length of a string using 2 ways
"""

string = input()
print(len(string))

counter = 0
for i in string:
  counter +=1
print(counter)

"""**2-Write a Python program to get a string made of the first 2 and last 2 characters of a given string. If the string length is less than 2, return the empty string instead ("##Sample String : 'w3resource'
Expected Result : 'w3ce'
##Sample String : 'w3'
Expected Result : 'w3w3'
##Sample String : ' w'
Expected Result : Empty String)
"""

string = "heidy"
if len(string) <2:
   print()
else:
  print(string[0:2]+string[-2: ])

"""**3-Write a Python program to add 'ing' at the end of a given string (length should be at least 3). If the given string already ends with 'ing', add 'ly' instead. If the string length of the given string is less than 3, leave it unchanged. (Sample String : 'abc'
Expected Result : 'abcing')
"""

string = input()
if len(string) <3:
  print(string)
elif string.endswith("ing"):
  print("ly")
else:
  print(string+"ing")

"""**4-Write a Python function that takes a list of words and return the longest word and the length of the longest one
(Longest word: Exercises
Length of the longest word: 9)
"""

def returnmax (words):
    logestword =""
    maxlen = 0
    for word in words:
      if len(word) > maxlen:
         logestword = word
         maxlen = len(word)
    return logestword, maxlen
maxword = returnmax (["ahmed", "heidy","ola","abdallah"])
maxword

"""**5-Write a Python program to change a given string to a newly string where the first and last chars have been exchanged using 2 ways (Sample String:abca  Expected Result:ebce)"""

string = input()
print (string[-1]+ string[1:-1] + string[0])

"""**6-Write a Python program to remove characters that have odd index values in a given string (Sample String:abca Expected Result:ac)"""

string ="heidy"
string[::2]

"""**7-Write a Python program to count the occurrences of each word in a given sentence (Sample String:amr and ahmed are frindes but amr is the tallest Expected Result:2)"""

sentence = "my name is heidy , my age is 22 "
words =sentence.split()
words = set(words)
words
for word in words:
  print(word ,sentence.count(word))

"""**8-Write a Python script that takes input from the user and displays that input back in upper and lower cases"""

string= input()
print(string.upper(), string.lower())

"""**9-Write a Python function to reverse a string if its length is a multiple of 4"""

string = input()
if len(string) %4 ==0:
   print(string[::-1])

"""**10- Write a Python program to remove a newline in Python"""

string= "my name is hedy \n my age is 22"
print(string.replace("\n"," "))

"""**11-Write a Python program to check whether a string starts with specified characters"""

str= "heidy "
print(str.startswith("h"))

"""**12- Write a Python program to add prefix text to all of the lines in a string"""

string= "ahmed\nemad"
mylist=string.split("\n")
mylist
for i in mylist:
  print("mr." +i )

"""**13-Write a Python program to print the following numbers up to 2 decimal places"""

round(2.34567,2)

"""**14-Write a Python program to print the following numbers up to 2 decimal places with a sign"""

number= float(input())
if number>0:
  print("+",round(number,2))
else:
  print(round(number,2))

"""**15-Write a Python program to display a number with a comma separator"""

number = 345678789
number = str(number)
for i in number:
    print(i+ "," , end="")

"""**16-Write a Python program to reverse a string using 2 ways"""

string= "heidy"
string[::-1]

for i in range(len(string)-1,-1,-1):
  print(string[i])

""" **17-Write a Python program to count repeated characters in a string (hint:use dictionary)"""

string = "my name is heidy"
d= dict()
for i in string:
    d[i] = 0
for i  in d:
     d[i] = string.count(i)
d

"""**18-Write a Python program to find the first non-repeating character in a given string"""

string = "instant software solution"
for i in string:
  if string.count(i)==1:
     print(i)
     break

"""**19-Write a Python program to remove spaces from a given string"""

str = "heidy"
print(str.removeprefix("h"))

"""**20-Write a Python program to count the number of non-empty substrings of a given string"""

string = input()
numberofsubstrings= (len(string)*(len(string)+1))/2
print(numberofsubstrings)

"""**21-write a Python program to swap first and last element of any list."""

l = [1,2,3,4,5]
l[0] , l[-1] = l[-1] , l[0]
l

"""**22-Given a list in Python and provided the positions of the elements, write a program to swap the two elements in the list. (Input : List = [23, 65, 19, 90], pos1 = 1, pos2 = 3
Output : [19, 65, 23, 90])
"""

l = [23, 65, 19, 90]
pos1 =1
pos2 =3
l[pos1] , l[pos2] = l[pos2] , l[pos1]
l

"""**23- search for the all ways to know the length of the list"""

counter = 0
for i in string:
  counter +=1
print(counter)

string = input()
print(len(string))

"""*24-write a Python code to find the Maximum number of list of numbers."""

l =[1,2,3,4,5,6,8,7]
 print(max(l))

"""**25-write a Python code to find the Minimum number of list of numbers."""

l=[1,2,3,4,5,6,8,7]
 print(min(l))

"""**26-search for if an elem is existing in list"""

l=[1,2,3,4,5,6,8,7]
 if 8 in l:
    print("yes")
else:
   print("no")

"""**27- clear python list using different ways"""

l=[1,2,3,4,5,6,8,7]
l.clear()

l=[1,2,3,4,5,6,8,7]
l=[]

"""**28-remove duplicated elements from a list"""

l=[2,2,3,3,5,5,7]
l = list(dict.fromkeys(l))
print(l)

"""**29-Given list values and keys list, convert these values to key value pairs in form of list of dictionaries. (Input : test_list = [“Gfg”, 3, “is”, 8], key_list = [“name”, “id”]
Output : [{‘name’: ‘Gfg’, ‘id’: 3}, {‘name’: ‘is’, ‘id’: 8}])
"""



"""**30-write a python program to count unique values inside a list using different ways"""

my_list = [1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10, 10]
unique_set = list((my_list))
unique_count = len(unique_list)
print( unique_count)

"""**31-write a python program Extract all elements with Frequency greater than K (Input : test_list = [4, 6, 4, 3, 3, 4, 3, 4, 3, 8], K = 3
Output : [4, 3] )
"""

test_list = [4, 6, 4, 3, 3, 4, 3, 4, 3, 8]
print(" list : " + str(test_list))
K = 3
x = []
for i in test_list:
	freq = test_list.count(i)
	if freq > K and i not in x:
		x.append(i)
print(" new list:"+ str(x))

"""**32-write a python program to find the Strongest Neighbour (Input: 1 2 2 3 4 5
Output: 2 2 3 4 5)
"""

n=6
a1 = [1 ,2 ,2 ,3 ,4 ,5]
a2 = []
for i in range(1,n):
    r = max(a1[i], a1[i-1])
    a2.append(r)
for i in a2 :
    print(i,end=" ")

"""**33-write a Python Program to print all Possible Combinations from the three Digits (Input: [1, 2, 3]
Output:
1 2 3 ##
1 3 2 ##
2 1 3 ##
2 3 1 ##
3 1 2 ##
3 2 1)
"""

l = [1,2,3]
numberofsubstrings= (len(l)*(len(l)+1))/2
print(numberofsubstrings)

"""**34-write a Python program to find all the Combinations in the list with the given condition (Input: test_list = [1,2,3]
Output:
 [1], [1, 2], [1, 2, 3], [1, 3]
 [2], [2, 3], [3])
"""



"""**35-write a Python program to get all unique combinations of two Lists (List_1 = ["a","b"]
List_2 = [1,2]
Unique_combination = [[('a',1),('b',2)],[('a',2),('b',1)]] )
"""

list_1 = ["a", "b"]
list_2 = [1,2]
unique_combinations = []
for i in range(len(list_1)):
	for j in range(len(list_2)):
		unique_combinations.append((list_1[i], list_2[j]))

print(unique_combinations)

"""**36-Remove all the occurrences of an element from a list in Python (Input : 1 1 2 3 4 5 1 2 1

**Output : 2 3 4 5 2)
"""

test_list = [1 ,1 ,2 ,3 ,4 ,5 ,1 ,2 ,1]
ele=1
x=[j for i,j in enumerate(test_list) if j!=ele]
print(x)

"""**37-write a python program to Replace index elements with elements in Other List (The original list 1 is : [‘Gfg’, ‘is’, ‘best’] The original list 2 is : [0, 1, 2, 1, 0, 0, 0, 2, 1, 1, 2, 0] The lists after index elements replacements is : [‘Gfg’, ‘is’, ‘best’, ‘is’, ‘Gfg’, ‘Gfg’, ‘Gfg’, ‘best’, ‘is’, ‘is’, ‘best’, ‘Gfg’])"""

a = ["gfg", "is" , "best"]
b = [0, 1, 2, 1, 0, 0, 0, 2, 1, 1, 2, 0]
print("List 1 : " , a)
print("List 2 : " , b)
x = [a[i] for i in b]
print ( x)

from google.colab import drive
drive.mount('/content/drive')

"""# New section

**38- write python program to Retain records with N occurrences of K(Input : test_list = [(4, 5, 5, 4), (5, 4, 3)], K = 5, N = 2
Output : [(4, 5, 5, 4)]
Input : test_list = [(4, 5, 5, 4), (5, 4, 3)], K = 5, N = 3
Output : [] )
"""

val = [(4, 5, 5, 4), (5, 4, 3)]
K = 5
N = 2
x = [i for i in val if i.count(K) == N]
print(x)

"""**39-write a Python Program to Sort the list according to the column using lambda
array = [[1, 3, 3], [2, 1, 2], [3, 2, 1]]
Output :
Sorted array specific to column 0, [[1, 3, 3], [2, 1, 2], [3, 2, 1]]
Sorted array specific to column 1, [[2, 1, 2], [3, 2, 1], [1, 3, 3]]
Sorted array specific to column 2, [[3, 2, 1], [2, 1, 2], [1, 3, 3]]
"""

lst = ['id01', 'id10', 'id02', 'id12', 'id03', 'id13']
lst_sorted = sorted(lst, key=lambda x: int(x[2:]))
print(lst_sorted)

"""**40- write a program to Sort Python Dictionaries by Key or Value
Input:
{'ravi': 10, 'rajnish': 9, 'sanjeev': 15, 'yash': 2, 'suraj': 32}

Output:
{'rajnish': 9, 'ravi': 10, 'sanjeev': 15, 'suraj': 32, 'yash': 2}
"""

myDict = {'ravi': 10, 'rajnish': 9,'sanjeev': 15, 'yash': 2, 'suraj': 32}
myKeys = list(myDict.keys())
myKeys.sort()
sorted_dict = {i: myDict[i] for i in myKeys}
print(sorted_dict)

"""**41-write python program to Remove keys with Values Greater than K ( Including mixed values )
nput : test_dict = {‘Gfg’ : 3, ‘is’ : 7, ‘best’ : 10, ‘for’ : 6, ‘geeks’ : ‘CS’},
K = 7
Output : {‘Gfg’ : 3, ‘for’ : 6, ‘geeks’ : ‘CS’}
"""

test_dict = {'Gfg' : 3, 'is' : 7, 'best' : 10, 'for' : 6, 'geeks' : 'CS'}

print("The original dictionary is : " + string(test_dict))

K = 6

res = {}
for key in test_dict:

	if not (isinstance(test_dict[key], int) and test_dict[key] > K):
		res[key] = test_dict[key]

print("The constructed dictionary : " + string(res))

test_dict = {"‘Gfg’" : 3, "‘is’": 7, "best’ ": 10," ‘for’ ": 6, "‘geeks’" : "‘CS’"}
K = "7"
if k in test_dict [k]:
    test_dict [k].remove(k)
print(test_dict )

"""**42-Write a Python program to concatenate the following dictionaries to create a new one

Sample Dictionary :
dic1={1:10, 2:20}
dic2={3:30, 4:40}
dic3={5:50,6:60}
Expected Result : {1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}
"""

d1={1:10, 2:20}
d2={3:30, 4:40}
d3= {}
for d in (d1,d2): d3.update(d)
print(d3)

"""**43-Write a Python program to iterate over dictionaries using for loops"""

words = {'a': 'juice', 'b': 'cat', 'c': 'anime'}
for i in words:
    print(i, words[i])

"""**44- Write a Python script to merge two Python dictionaries"""

dict_1 = {1: 'a', 2: 'b'}
dict_2 = {2: 'c', 4: 'd'}
print(dict_1 | dict_2)

"""**45-Write a Python program to get the maximum and minimum values of a dictionary values"""

d ={1,2,3,4,5,6,8,7}
 print(min(d))

d ={1,2,3,4,5,6,8,7}
 print(max(d))

"""**46- Write a Python program to drop empty items from a given dictionary.
Original Dictionary:
{'c1': 'Red', 'c2': 'Green', 'c3': None}
New Dictionary after dropping empty items:
{'c1': 'Red', 'c2': 'Green'}
"""

color = {'c1': 'Red', 'c2': 'Green', 'c3': None}
print("Original Dictionary:",color)
color = {key:value for (key, value) in color.items() if value is not None}
print("New Dictionary :",color)

"""**47-Write a Python program to create a tuple of numbers and print one item"""

a = input()
print(a)
print(type(a))

"""**48-Write a Python program to unpack a tuple into several variables"""

a = 4, 8, 3
n1, n2, n3 = a
print(n1 + n2 + n3)

"""**49-Write a Python program to add an item to a tuple"""

tuplex = (1,2,3,4,5)
tuplex = tuplex + (10,)
print(tuplex)

"""**50-Write a Python program to convert a tuple to a string"""

tup = ("h","e","i","d","y")
str = ''.join(tup)
print(str)

"""**51-Write a Python program to convert a list to a tuple"""

my_list= [5, 10, 7, 4, 15, 3]
print(my_list)
tuplex = tuple(my_list)
print(tuplex)

"""**52-Write a Python program to reverse a tuple"""

def Reverse(tuples):
    new_tup = tuples[::-1]
    return new_tup
tuples = ('z','a','d','f','g','e','e','k')
print(Reverse(tuples))

"""**53-Write a Python program to replace the last value of tuples in a list.
Sample list: [(10, 20, 40), (40, 50, 60), (70, 80, 90)]
Expected Output: [(10, 20, 100), (40, 50, 100), (70, 80, 100)]
"""

l = [(10, 20, 40), (40, 50, 60), (70, 80, 90)]
print([t[:-1] + (100,) for t in l])

"""**54-Write a Python program to convert a given string list to a tuple
Original string: python 3.0
<class 'str'>
Convert the said string to a tuple:
('p', 'y', 't', 'h', 'o', 'n', '3', '.', '0')
"""

test_str = "1, -5, 4, 6, 7"
print("The original string : " + str(test_str))
res = tuple(map(int, test_str.split(', ')))
print("Tuple after getting conversion from String : " + str(res))

"""**55-Write a Python program to calculate the average value of the numbers in a given tuple of tuples"""

test_list = [(1, 4, 5), (7, 8), (2, 4, 10)]
print("The original list is : " + string(test_list))
sum = 0
for sub in test_list:
  	for i in sub:
	    	sum = sum + i
res = sum / len(test_list)
print("The mean of tuple list is : " + string(res))

"""**56-Write a Python program to add member(s) to a set."""

name = {"heidy","ola"}
name.add("sayed")
print("Add single element : ",name)

"""**57-Write a Python program to remove an item from a set if it is present in the set."""

setx = {"ahmed", "ali", "heidy"}

setx.remove("ahmed")

print(setx)

"""**58-Write a Python program to create an intersection,union,difference and symmetric difference of sets"""

A = {0, 2, 4, 6, 8};
B = {1, 2, 3, 4, 5};
print( A | B)
print( A & B)
print( A - B)
print( A ^ B)

"""**59-Write a Python program to find the maximum and minimum values in a set"""

my_set = {5, 2, 8, 1, 9, 2, 18}
maximum = max(my_set)
minimum = min(my_set)
print("Maximum:", maximum)
print("Minimum:", minimum)

"""**60- Write a Python program that finds all pairs of elements in a list whose sum is equal to a given value."""

def findPairs(lst, K):
	res = []
	while lst:
		num = lst.pop()
		diff = K - num
		if diff in lst:
			res.append((diff, num))
	res.reverse()
	return res
lst = [1, 5, 3, 7, 9]
K = 12
print(findPairs(lst, K))